/* using box-sizing will ensure your content stays a certain size even after you add the padding, borders etc. otherwise when you
add the border, padding etc, it will make it wider/higher than the given width/height you put in your css for that element */

html {
    box-sizing: border-box;
}

*,
*::before,
*::after {
    box-sizing: inherit;
}

#outer{ /* this keeps your squares in a fixed grid. for now, you are using flexbox bc you haven't learned grid yet.  */
    margin: auto; /* this makes it auto on the sides, but the top there is no margin */
    /* better learn grid bc in #container { } when you add a gap, the 16x16 is no longer holding and it becomes 15x15 with 
    an extra box in the center bottom */
    width: 1000px;
    height: 1000px;
}

/*   
this link is a good reference on flex box basics.

https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout/Basic_Concepts_of_Flexbox

testing flex box. the below will apply the default flex direction which is row to the div id container. when that happens, 
the multiple divs are horizontal and squished. to make it not as squished, use flex-wrap and it will flow to the next row and 
next row and it does this fluidly even when you resize the browser. but it won't look like a fixed grid of 16x16. also you 
need the flex 1 bc that will make things shrink and grow in a uniform manner.

*/

#container {  /* this is ok for wrapping content in a fluid way but it is not a 16x16 grid. best to use another method
    such as grid? for now, it seems the 16X16 square is holding as long as you don't have a gap */
    display: flex;
    flex-wrap: wrap;
    flex: 1;
    justify-content: center;
    /* gap: 3px; by having a gap, it no longer makes it 16x16. it becomes 15x15 with an extra box at the bottom center */
}

/*

https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout/Typical_Use_Cases_of_Flexbox

this link might be helpful but not as helpful as the first one. this one does have a good explanation on navigation layouts and 
the card layout.

*/

.square {
    border-style: solid;
    border-color: black;
    border-width: 1px;
    height: 60px;
    width: 60px;
}